# A2hosting Environment Variables Template
# Copy these values to your Node.js app configuration in cPanel

# ======================
# REQUIRED VARIABLES
# ======================

# Node Environment (always set to production on A2hosting)
NODE_ENV=production

# PostgreSQL Database Connection String
# Format: postgresql://username:password@host:port/database?sslmode=require
# Examples:
#   - Neon Database: postgresql://user:pass@ep-cool-meadow-123456.us-east-1.aws.neon.tech/mydb?sslmode=require
#   - A2hosting PostgreSQL: postgresql://dbuser:dbpass@localhost:5432/dbname?sslmode=require
DATABASE_URL=postgresql://username:password@host:port/database?sslmode=require

# Admin API Token for protected endpoints
# Generate a secure token using: openssl rand -base64 32
# IMPORTANT: Keep this secret! Anyone with this token can access admin endpoints
ADMIN_API_TOKEN=your-high-entropy-random-token-here

# ======================
# OPTIONAL VARIABLES
# ======================

# Base Path for A2hosting Phusion Passenger
# If your app is accessed at yourdomain.com/research, set this to /research
# Leave empty if app is at root domain
# BASE_PATH=/research

# Google Cloud Storage Configuration (if using file uploads)
# Path to your Google Cloud service account key JSON file
# GOOGLE_APPLICATION_CREDENTIALS=/home/username/research-platform/gcs-key.json
# GCS_BUCKET_NAME=your-bucket-name

# Session Secret (if not using default)
# SESSION_SECRET=another-random-secret-here

# ======================
# IMPORTANT NOTES
# ======================

# 1. NEVER commit this file with real values to version control
# 2. Generate secure tokens using: openssl rand -base64 32
# 3. Database URL must include sslmode=require for Neon
# 4. All environment variables are set in cPanel Node.js Selector interface
# 5. After setting variables, restart your application

# ======================
# AUTHENTICATION WARNING
# ======================

# This application currently uses Replit OIDC authentication which will NOT work on A2hosting.
# You must either:
#   A) Remove authentication and make profiles public-only
#   B) Implement alternative authentication (username/password, JWT, etc.)
#
# Contact your developer for help implementing alternative authentication.

# ======================
# HOW TO SET IN CPANEL
# ======================

# 1. Log into cPanel
# 2. Go to Software â†’ Setup Node.js App
# 3. Click on your application
# 4. Scroll to "Environment Variables" section
# 5. Add each variable name and value
# 6. Click "Save"
# 7. Restart your application
