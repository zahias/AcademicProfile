===================================
Research Profile Platform - WordPress Theme
Installation & Deployment Guide
===================================

OVERVIEW
--------
This WordPress theme embeds the Research Profile Platform React application.
It requires a separate Node.js backend server to function properly.

ARCHITECTURE
------------
- WordPress: Serves the frontend React application
- Node.js Backend: Handles API requests, database operations, and file storage
- PostgreSQL: Database (connected to Node.js)
- Google Cloud Storage: File uploads (connected to Node.js)

INSTALLATION STEPS
------------------

STEP 1: Deploy the Node.js Backend
-----------------------------------
Before installing the WordPress theme, you must deploy the Node.js backend server.

Option A: Deploy on Replit
1. Keep your current Replit project running
2. Note the URL (e.g., https://your-project.replit.app)
3. Ensure all environment variables are set:
   - DATABASE_URL
   - ADMIN_API_TOKEN
   - DEFAULT_OBJECT_STORAGE_BUCKET_ID
   - PGDATABASE, PGHOST, PGPORT, PGUSER, PGPASSWORD
   - PRIVATE_OBJECT_DIR
   - PUBLIC_OBJECT_SEARCH_PATHS

Option B: Deploy on Other Platforms
You can deploy the Node.js backend to:
- Heroku
- Railway
- DigitalOcean App Platform
- AWS Elastic Beanstalk
- Google Cloud Run
- Any VPS with Node.js support

Requirements:
- Node.js 18+
- PostgreSQL database
- Google Cloud Storage bucket
- All environment variables configured

STEP 2: Install WordPress Theme
--------------------------------
1. Download/create the theme zip file:
   - If you have the wordpress-theme folder, zip it first
   - Name: research-profile-platform.zip

2. Upload to WordPress:
   - Go to WordPress Admin Dashboard
   - Navigate to: Appearance > Themes
   - Click "Add New" > "Upload Theme"
   - Choose the zip file
   - Click "Install Now"
   - Click "Activate"

STEP 3: Configure the Theme
----------------------------
1. Go to WordPress Admin Dashboard
2. Navigate to: Settings > Research Profile
3. Enter your Node.js Backend API URL
   Example: https://your-project.replit.app
4. Click "Save Settings"

STEP 4: Set Homepage
--------------------
1. Go to: Settings > Reading
2. Set "Your homepage displays" to "A static page"
3. Create a new page called "Home" if needed
4. Select it as the homepage
5. Save changes

STEP 5: Test the Installation
------------------------------
1. Visit your WordPress site homepage
2. You should see the Research Profile Platform interface
3. Try navigating to a researcher profile (if you have data)
   Example: /researcher/A5056485484

TROUBLESHOOTING
---------------

Problem: Blank page or "Cannot read property" errors
Solution: 
- Check that the API URL is correctly set in WordPress settings
- Verify the Node.js backend is running and accessible
- Check browser console for CORS errors

Problem: CORS errors
Solution:
- Update your Node.js backend to allow requests from your WordPress domain
- Add the following to your server/index.ts (before routes):
  
  app.use((req, res, next) => {
    res.header('Access-Control-Allow-Origin', 'https://your-wordpress-site.com');
    res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
    res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization');
    res.header('Access-Control-Allow-Credentials', 'true');
    if (req.method === 'OPTIONS') {
      return res.sendStatus(200);
    }
    next();
  });

Problem: Assets not loading (404 errors)
Solution:
- Rebuild the React app: npm run build
- Re-copy the build folder to wordpress-theme/build
- Re-upload the theme to WordPress

Problem: Database connection errors
Solution:
- Verify DATABASE_URL is set correctly on the Node.js backend
- Check PostgreSQL database is accessible
- Verify all PG* environment variables are correct

UPDATING THE THEME
------------------
When you make changes to the React app:

1. Rebuild the app:
   npm run build

2. Copy new build to theme:
   cp -r dist/public wordpress-theme/build

3. Create new zip file

4. Upload to WordPress:
   - Go to Appearance > Themes
   - Delete old version (don't worry, settings are preserved)
   - Upload new version
   - Activate

BACKEND ENDPOINTS REQUIRED
---------------------------
The WordPress theme expects these API endpoints to be available:

- GET  /api/researcher/:openalexId/data
- GET  /api/researcher/:openalexId/topics
- GET  /api/researcher/:openalexId/publications
- GET  /api/researcher/:openalexId/affiliations
- GET  /api/researcher/:openalexId/updates (SSE)
- POST /api/admin/researcher/profile
- PUT  /api/admin/researcher/profile/:openalexId
- POST /api/admin/researcher/:openalexId/sync
- POST /api/admin/researcher/:openalexId/upload-cv

IMPORTANT SECURITY NOTES
------------------------
1. Use HTTPS for both WordPress and Node.js backend in production
2. Set strong ADMIN_API_TOKEN for the backend
3. Configure CORS properly to only allow your WordPress domain
4. Keep WordPress, plugins, and Node.js dependencies updated
5. Use environment variables for all secrets (never hardcode)

SUPPORT & DOCUMENTATION
------------------------
For more information about the Research Profile Platform:
- Backend API: Check server/routes.ts for endpoint documentation
- React Components: See client/src/components/
- Database Schema: See shared/schema.ts

HOSTING RECOMMENDATIONS
-----------------------
WordPress Frontend:
- Any WordPress hosting (Bluehost, SiteGround, WP Engine, etc.)
- Minimum: PHP 7.4+, MySQL 5.7+

Node.js Backend:
- Replit (easiest, already configured)
- Railway (good for Node.js apps)
- Heroku (popular choice)
- DigitalOcean App Platform (flexible)
- Any VPS with Node.js support

Database:
- Neon (serverless PostgreSQL - current setup)
- Supabase
- Railway PostgreSQL
- Heroku PostgreSQL
- AWS RDS

FILE STRUCTURE
--------------
wordpress-theme/
├── style.css          (Theme metadata)
├── functions.php      (Theme functionality)
├── index.php          (Main template)
├── header.php         (WordPress header)
├── footer.php         (WordPress footer)
├── build/             (React production build)
│   ├── index.html
│   └── assets/
│       ├── index-[hash].css
│       └── index-[hash].js
└── INSTALL.txt        (This file)

===================================
End of Installation Guide
===================================
